<UserControl
    x:Name="ControlRoot"
    x:Class="WinUX.Xaml.Controls.AppMenu"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:WinUX.Xaml.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:actions="using:WinUX.Xaml.Behaviors.Common.Actions"
    xmlns:menuFlyout="using:WinUX.Xaml.Behaviors.MenuFlyout"
    xmlns:radioButton="using:WinUX.Xaml.Behaviors.RadioButton"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="PaneButtonStyle" TargetType="Button">
                <Setter Property="Height" Value="48" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="ButtonRoot" Background="{TemplateBinding Background}" >
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ButtonRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="HoverOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="PressedOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <Rectangle x:Name="PressedOverlay" Fill="White" Opacity=".4" Visibility="Collapsed" />
                                <Rectangle x:Name="HoverOverlay" Fill="White" Opacity=".2" Visibility="Collapsed" />
                                <FontIcon x:Name="ContentPresenter" FontSize="20" Foreground="{TemplateBinding Foreground}" Glyph="&#xE700;" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTipService.ToolTip" Value="Open/close the menu" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Width" Value="48" />
            </Style>

            <DataTemplate x:Key="FlyoutAppMenuButtonItemTemplate" x:DataType="controls:FlyoutAppMenuButton">
                <Button Width="{Binding OpenPaneWidth, ElementName=ControlRoot}"
                        MinWidth="48" MaxWidth="{x:Bind MaxWidth, Mode=TwoWay}" 
                        HorizontalAlignment="Stretch"
                        IsEnabled="{Binding IsEnabled, Mode=TwoWay}" Tag="{x:Bind Content}"
                        ToolTipService.ToolTip="{x:Bind ToolTip, Mode=OneWay}"
                        Visibility="{Binding Visibility, Mode=TwoWay}">
                    <Button.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <interactivity:Interaction.Behaviors>
                                <menuFlyout:AttachMenuFlyoutItemsBehavior ItemsSource="{x:Bind FlyoutItems, Mode=OneWay}" />
                            </interactivity:Interaction.Behaviors>
                        </MenuFlyout>
                    </Button.Flyout>

                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid" 
                                  MinWidth="48" MinHeight="48" MaxWidth="{TemplateBinding MaxWidth}"
                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                  Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>
                                                <Setter Target="NormalBack.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="HoverBack.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="PressedBack.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="NormalFore.Opacity" Value=".5" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid.Resources>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="FontSize" Value="16" />
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Style>
                                </Grid.Resources>

                                <Rectangle x:Name="NormalBack" Fill="{Binding AppMenuButtonBackground, ElementName=ControlRoot}" IsHitTestVisible="False" Visibility="Collapsed" />
                                <Rectangle x:Name="PressedBack" Fill="{Binding AppMenuButtonPressedBackground, ElementName=ControlRoot}" IsHitTestVisible="False" Visibility="Collapsed" />
                                <Rectangle x:Name="HoverBack" Fill="{Binding AppMenuButtonHoverBackground, ElementName=ControlRoot}" IsHitTestVisible="False" Visibility="Collapsed" />
                                <ContentControl x:Name="NormalFore" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Tag}" Foreground="{Binding AppMenuButtonForeground, ElementName=ControlRoot, FallbackValue=White}" IsHitTestVisible="False" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </DataTemplate>

            <DataTemplate x:Key="AppMenuButtonItemTemplate" x:DataType="controls:AppMenuButton">
                <RadioButton x:Name="AppButton" Width="{Binding OpenPaneWidth, ElementName=ControlRoot}" MinWidth="48"
                             MaxWidth="{x:Bind MaxWidth, Mode=TwoWay}"
                             Command="{Binding AppButtonNavigationCommand, ElementName=ControlRoot}"
                             CommandParameter="{Binding}" Holding="OnAppMenuButtonHolding"
                             IsChecked="{Binding IsChecked, Mode=TwoWay}"
                             IsEnabled="{Binding IsEnabled, Mode=TwoWay}" Loaded="OnAppMenuButtonLoaded"
                             RightTapped="OnAppMenuButtonRightTapped" Tag="{x:Bind Content}"
                             Tapped="OnAppMenuButtonTapped"
                             ToolTipService.ToolTip="{x:Bind ToolTip, Mode=OneWay}"
                             Visibility="{Binding Visibility, Mode=TwoWay}">

                    <interactivity:Interaction.Behaviors>
                        <radioButton:RadioButtonGroupNameTriggerBehavior SetGroupName="{x:Bind IsGrouped, Mode=TwoWay}" GroupName="AppMenuItems" />
                    </interactivity:Interaction.Behaviors>

                    <RadioButton.Template>
                        <ControlTemplate TargetType="RadioButton">
                            <ToggleButton MinWidth="48" MinHeight="48" MaxWidth="{TemplateBinding MaxWidth}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          AutomationProperties.AccessibilityView="Raw" Checked="OnAppMenuButtonChecked"
                                          Command="{TemplateBinding Command}"
                                          CommandParameter="{TemplateBinding CommandParameter}"
                                          Content="{TemplateBinding Tag}"
                                          IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                          Unchecked="OnAppMenuButtonUnchecked" UseSystemFocusVisuals="True"
                                          Visibility="{TemplateBinding Visibility}">

                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid x:Name="ButtonRoot" Width="{Binding OpenPaneWidth, ElementName=ControlRoot}"
                                              Background="Transparent">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal">
                                                        <VisualState.Setters>
                                                            <Setter Target="NormalBack.Visibility" Value="Visible" />
                                                        </VisualState.Setters>
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="ButtonRoot" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="PointerOver">
                                                        <VisualState.Setters>
                                                            <Setter Target="HoverBack.Visibility" Value="Visible" />
                                                        </VisualState.Setters>
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="ButtonRoot" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <VisualState.Setters>
                                                            <Setter Target="PressedBack.Visibility" Value="Visible" />
                                                        </VisualState.Setters>
                                                        <Storyboard>
                                                            <PointerDownThemeAnimation Storyboard.TargetName="ButtonRoot" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <VisualState.Setters>
                                                            <Setter Target="NormalFore.Opacity" Value=".5" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="Checked">
                                                        <VisualState.Setters>
                                                            <Setter Target="CheckedBack.Visibility" Value="Visible" />
                                                        </VisualState.Setters>
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="ButtonRoot" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="CheckedPointerOver">
                                                        <VisualState.Setters>
                                                            <Setter Target="HoverBack.Visibility" Value="Visible" />
                                                        </VisualState.Setters>
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="ButtonRoot" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="CheckedPressed">
                                                        <VisualState.Setters>
                                                            <Setter Target="PressedBack.Visibility" Value="Visible" />
                                                        </VisualState.Setters>
                                                        <Storyboard>
                                                            <PointerDownThemeAnimation Storyboard.TargetName="ButtonRoot" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="CheckedDisabled">
                                                        <VisualState.Setters>
                                                            <Setter Target="CheckedBack.Visibility" Value="Visible" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="Indeterminate" />
                                                    <VisualState x:Name="IndeterminatePointerOver" />
                                                    <VisualState x:Name="IndeterminatePressed" />
                                                    <VisualState x:Name="IndeterminateDisabled" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid.Resources>
                                                <Style TargetType="ContentPresenter">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="FontSize" Value="16" />
                                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </Style>
                                            </Grid.Resources>
                                            <Rectangle x:Name="NormalBack" Fill="{Binding AppMenuButtonBackground, ElementName=ControlRoot}"
                                                       IsHitTestVisible="False" Visibility="Collapsed" />
                                            <Rectangle x:Name="PressedBack"
                                                       Fill="{Binding AppMenuButtonPressedBackground, ElementName=ControlRoot}"
                                                       IsHitTestVisible="False" Visibility="Collapsed" />
                                            <Rectangle x:Name="HoverBack"
                                                       Fill="{Binding AppMenuButtonHoverBackground, ElementName=ControlRoot}"
                                                       IsHitTestVisible="False" Visibility="Collapsed" />
                                            <Rectangle x:Name="CheckedBack"
                                                       Fill="{Binding AppMenuButtonCheckedBackground, ElementName=ControlRoot}"
                                                       IsHitTestVisible="False" Visibility="Collapsed" />
                                            <ContentControl x:Name="NormalFore" AutomationProperties.AccessibilityView="Raw"
                                                            Content="{TemplateBinding Content}"
                                                            Foreground="{Binding AppMenuButtonForeground, ElementName=ControlRoot, FallbackValue=White}"
                                                            IsHitTestVisible="False" />
                                        </Grid>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="RootGrid">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowTrigger" MinWindowWidth="{Binding VisualStateNarrowMinWidth, ElementName=ControlRoot}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MenuShell.DisplayMode" Value="Overlay" />
                        <Setter Target="MenuShell.IsPaneOpen" Value="False" />
                        <Setter Target="PaneButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNormalTrigger" MinWindowWidth="{Binding VisualStateNormalMinWidth, ElementName=ControlRoot}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MenuShell.DisplayMode" Value="CompactOverlay" />
                        <Setter Target="MenuShell.IsPaneOpen" Value="False" />
                        <Setter Target="PaneButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <ContentControl x:Name="Header" Height="48" Margin="48,0,0,0"
                        VerticalAlignment="Top" HorizontalContentAlignment="Stretch"
                        Content="{Binding HeaderContent, ElementName=ControlRoot}">
            <interactivity:Interaction.Behaviors>
                <core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=PaneButton}" Value="Visible">
                    <core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=Header}">
                        <core:ChangePropertyAction.Value>
                            <Thickness>48,0,0,0</Thickness>
                        </core:ChangePropertyAction.Value>
                    </core:ChangePropertyAction>
                </core:DataTriggerBehavior>
                <core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=PaneButton, Mode=OneWay}" Value="Collapsed">
                    <core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=Header}">
                        <core:ChangePropertyAction.Value>
                            <Thickness>0,0,0,0</Thickness>
                        </core:ChangePropertyAction.Value>
                    </core:ChangePropertyAction>
                </core:DataTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </ContentControl>

        <SplitView x:Name="MenuShell" Grid.Column="0" DisplayMode="Inline" IsPaneOpen="False" OpenPaneLength="{x:Bind OpenPaneWidth, Mode=OneWay}" PaneBackground="Transparent">
            <SplitView.Pane>
                <Grid x:Name="PaneContent" Margin="0,48,0,0"
                      Background="{x:Bind PaneBackground, Mode=OneWay}"
                      BorderBrush="{x:Bind PaneBorderBrush, Mode=OneWay}"
                      BorderThickness="{x:Bind PaneBorderThickness}">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <interactivity:Interaction.Behaviors>
                        <core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=PaneButton, Mode=OneWay}" Value="Visible">
                            <core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                                <core:ChangePropertyAction.Value>
                                    <Thickness>0,48,0,0</Thickness>
                                </core:ChangePropertyAction.Value>
                            </core:ChangePropertyAction>
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=PaneButton, Mode=OneWay}" Value="Collapsed">
                            <actions:ConditionalAction LeftValue="{x:Bind HeaderContent}" Operator="IsNull">
                                <core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                                    <core:ChangePropertyAction.Value>
                                        <Thickness>0,0,0,0</Thickness>
                                    </core:ChangePropertyAction.Value>
                                </core:ChangePropertyAction>
                            </actions:ConditionalAction>
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=PaneButton, Mode=OneWay}" Value="Collapsed">
                            <actions:ConditionalAction LeftValue="{x:Bind HeaderContent}" Operator="IsNotNull">
                                <core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                                    <core:ChangePropertyAction.Value>
                                        <Thickness>0,48,0,0</Thickness>
                                    </core:ChangePropertyAction.Value>
                                </core:ChangePropertyAction>
                            </actions:ConditionalAction>
                        </core:DataTriggerBehavior>
                    </interactivity:Interaction.Behaviors>

                    <ScrollViewer Grid.Row="0" AutomationProperties.AccessibilityView="Raw" VerticalScrollBarVisibility="Auto">
                        <ItemsControl x:Name="PrimaryButtonContainer"
                                      ItemTemplate="{StaticResource AppMenuButtonItemTemplate}"
                                      ItemsSource="{Binding PrimaryButtons, ElementName=ControlRoot}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>

                    <ItemsControl x:Name="CommandButtonContainer"
                                      Grid.Row="1"
                                      ItemTemplate="{StaticResource FlyoutAppMenuButtonItemTemplate}"
                                      ItemsSource="{Binding FlyoutButtons, ElementName=ControlRoot}" >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>

                    <ItemsControl x:Name="SecondaryButtonContainer" 
                                  Grid.Row="2" 
                                  ItemTemplate="{StaticResource AppMenuButtonItemTemplate}" 
                                  ItemsSource="{Binding SecondaryButtons, ElementName=ControlRoot}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel BorderBrush="{Binding SecondarySeparatorColor, ElementName=ControlRoot, FallbackValue=White}"
                                            BorderThickness="0,1,0,0" Loaded="OnSecondaryButtonStackPanelLoaded" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Grid>
            </SplitView.Pane>
        </SplitView>

        <Grid x:Name="PaneButtonContainer" Grid.Row="0"
              Width="{x:Bind AppMenuButtonWidth, Mode=OneWay}"
              Background="{x:Bind PaneButtonBackground, FallbackValue=Gray, Mode=OneWay}"
              Opacity="0.95" HorizontalAlignment="Left" VerticalAlignment="Top"
              Visibility="{x:Bind PaneButtonVisibility, Mode=OneWay}">
            <Button x:Name="PaneButton" AutomationProperties.Name="Hamburger Menu Button"
                    Background="{x:Bind PaneButtonBackground, FallbackValue=Gray, Mode=OneWay}"
                    Command="{x:Bind AppMenuCommand}"
                    IsEnabled="{x:Bind IsPaneButtonEnabled, Mode=OneWay}"
                    Foreground="{x:Bind PaneButtonForeground, FallbackValue=White, Mode=OneWay}"
                    RenderTransformOrigin="0.5,0.5" Style="{StaticResource PaneButtonStyle}">
                <Button.RenderTransform>
                    <CompositeTransform />
                </Button.RenderTransform>
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontSize="20" Glyph="&#xE700;" />
                </StackPanel>
            </Button>
        </Grid>
    </Grid>
</UserControl>